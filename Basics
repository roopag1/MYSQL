

use sql_store;



select * from customers;

Select * 
From customers
Where first_name='Ines';


Select * 
From orders
Where shipper_id=4;

Select * 
From customers
Where customer_id = 7;

Select last_name, 
    first_name,
    points,
    (points+10)*100 As discount_factor
From customers;

select distinct state from Customers;

select distinct order_id from orders;


Select name, unit_price, unit_price*1.1 as new_price from products;


select * 
from Customers
Where points > 3000 ;

select * 
from Customers
Where state <> 'ma' ;


select * 
from Customers
WHERE birth_date < '2016-01-01';


Select *
FROM orders
WHERE order_date = '2019-01-01';

Select *
FROM orders
WHERE order_date = '2019-01-01';



Select *
From customers
Where birth_date >= '1990-01-01' And points > 1000;

Select *
From customers
Where birth_date >= '1990-01-01' or points > 1000;

Select *
From customers
Where NOT(birth_date <= '1990-01-01' or points > 1000);


select * 
from Customers
Where state = 'va' OR 'GA' or 'FL';

select * 
from Customers
Where state IN('VA','GA','FL');

select * 
from Customers
Where state NOT IN('VA','GA','FL');

select * 
from products
Where quantity_in_stock In('10','38','72');

select * 
from Customers
Where points >=500 And points <=1000;

select * 
from Customers
Where points Between 1000 And 3000;
select * 
from Customers
WHERE birth_date Between '1990-01-01' And '2000-01-01'; 
select*
from Customers
WHERE points BETWEEN '500' AND '1000'; 



select * 
from Customers
Where last_name Like 'b%';

select * 
from Customers
Where last_name Like '_a%';


select * 
from Customers
Where last_name regexp 'dow|boa|ett';

select* from customers;

select * 
from Customers
where phone is  Null;

select * 
from Customers
where phone is Not Null;


select * 
from Customers
Order by last_name desc, first_name asc;
select * 
from Customers
Order by birth_date asc;


select * 
from Customers
Limit 3;
select * 
from Customers
Limit 4,3;

Select order_id, o.customer_id, first_name, city
FROM orders o
Join customers c
On o.customer_id = c.customer_id;

Select order_id, o.customer_id, first_name, city
From orders o 
Right outer join customers c
On o.customer_id = c.customer_id;
 
Select order_id, o.customer_id, first_name, city
From orders o 
left  outer join customers c
ON o.customer_id = c.customer_id;
    
 Create  Table orders_archived as
 select * from orders;


Select
    e.employee_id,
    e.first_name,
    m.first_name As manager
 From employees e
 Join employees m
    On  e.reports_to = m.employee_id;
    
Select order_id,
order_date,
'Active' As Status
From orders
Where order_date >= '2019-01-01'
Union
Select order_id,
order_date,
'Archived' As Status
FROM orders
Where order_date < '2019-01-01';

insert into Customers(first_name, last_name, birth_date, address, city, state)
Values ('sara', 'khan', '1999-03-06', 'sanjeevini nagar','bengaluru', 'KA');


update customers
set city = 'Karnataka' 
where customer_id=11; 

select * from orders where customer_id  IN (select customer_id from customers where customer_id=5);


delete from customers
where customer_id = 11;


Select * 
From order_items oi
Join sql_inventory.products p
On oi.product_id = p.product_id;

